apiVersion: batch/v1
kind: Job
metadata:
  name: upload-models
  namespace: minio
spec:
  template:
    spec:
      volumes:
        - name: mc-config
          emptyDir: {}

      initContainers:
        - name: wait-for-buckets
          image: minio/mc
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "üïí Esperando a que MinIO est√© disponible..."
              until mc alias set myminio http://minio-service.minio.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
                echo "‚è≥ Esperando conexi√≥n a MinIO..."
                sleep 5
              done

              echo "üì¶ Verificando que los buckets existan..."
              until mc ls myminio/s3-storage && mc ls myminio/pipelines; do
                echo "‚è≥ Buckets a√∫n no disponibles. Esperando..."
                sleep 5
              done

              echo "‚úÖ Buckets encontrados. Continuando..."
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_root_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_root_password
            - name: MC_CONFIG_DIR
              value: /tmp/.mc
          volumeMounts:
            - name: mc-config
              mountPath: /tmp/.mc

      containers:
        - name: uploader
          image: alpine:latest
          securityContext:
            runAsUser: true
          command: ["/bin/sh", "-c"]
          args:
            - |
              set -e
              echo "üîß Instalando curl, wget y bash..."
              apk add --no-cache curl wget bash

              echo "‚¨áÔ∏è Descargando cliente mc..."
              wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/bin/mc
              chmod +x /usr/bin/mc

              echo "‚¨áÔ∏è Descargando modelos desde GitHub..."
              wget https://raw.githubusercontent.com/dialvare/ai-lifecycle-edge/main/models/stress-detection/stress-detection.xml -O /tmp/stress-detection.xml
              wget https://raw.githubusercontent.com/dialvare/ai-lifecycle-edge/main/models/stress-detection/stress-detection.bin -O /tmp/stress-detection.bin

              echo "üîê Configurando acceso a MinIO..."
              mc alias set myminio http://minio-service.minio.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD

              echo "‚¨ÜÔ∏è Subiendo archivos a MinIO..."
              mc cp /tmp/stress-detection.xml myminio/s3-storage/models/stress-detection/1/
              mc cp /tmp/stress-detection.bin myminio/s3-storage/models/stress-detection/1/

              echo "‚úÖ Subida completada."
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_root_user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: minio_root_password
            - name: MC_CONFIG_DIR
              value: /tmp/.mc
          volumeMounts:
            - name: mc-config
              mountPath: /tmp/.mc

      restartPolicy: OnFailure
